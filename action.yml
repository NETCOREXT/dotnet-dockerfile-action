name: 'Generate dockerfile'
description: 'Generate dotnet app dockerfile'

inputs:
  version:
    description: 'Dotnet Version'
    default: "6.0-alpine"

runs:
  using: "composite"
  steps:
    - name: Create Dockerfile
      shell: bash
      run: |
        cat > dockerfile << EOF
        FROM mcr.microsoft.com/dotnet/aspnet:${{ inputs.version }} AS base
        ENV ASPNETCORE_ENVIRONMENT=Production
        WORKDIR /app
        VOLUME [ "/app" ]
        EXPOSE 80 443

        FROM mcr.microsoft.com/dotnet/sdk:${{ inputs.version }} AS build
        ARG APP \\
            ADDITIONAL_ARGUMENTS \\
            NUGET_API_KEY \\
            NUGET_API_URL
        WORKDIR /sources
        COPY . /sources

        RUN if [ ! -z "\$NUGET_API_KEY" ] && [ ! -z "\$NUGET_API_URL" ]; then dotnet nuget add source --username USERNAME --password \$NUGET_API_KEY --store-password-in-clear-text --name github "\$NUGET_API_URL"; fi
        RUN export PROJECT_PATH=`find . -type f -iname "${APP}.csproj"`
        RUN dotnet restore "\$PROJECT_PATH" --no-cache
        RUN dotnet publish "\$PROJECT_PATH" \${ADDITIONAL_ARGUMENTS} -o /dist

        FROM base AS final
        WORKDIR /app
        COPY --from=build /dist .
        ENTRYPOINT export APP=\$(basename *.runtimeconfig.json .runtimeconfig.json) && dotnet \$APP.dll
        EOF